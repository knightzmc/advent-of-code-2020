/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package me.bristermitten.aoc.day8;

public class App {

    public static void main(String[] args) {
        Machine machine = new Machine();

        String input = "";
        try (var s = App.class.getClassLoader().getResourceAsStream("data.txt")) {
            input = new String(s.readAllBytes());
        } catch (Exception e) {
            e.printStackTrace();
            return;
        }

        var instructions = new Parser().parse(input);
        machine.getInstructions().addAll(instructions);

        machine.execute();
        System.out.println("Part 1: " + machine.getAccumulatorValue());

        // part 2

        System.out.println("Part 2");

        for (int i = 0; i < machine.getInstructions().size(); i++) {
            var atIndex = machine.getInstructions().get(i);

            machine.resetState();

            if (atIndex instanceof NOPInstruction) {
                var nop = (NOPInstruction) atIndex;
                machine.getInstructions().set(i, new JMPInstruction(nop.getAdjustment()));
            } else if (atIndex instanceof JMPInstruction) {
                var jmp = (JMPInstruction) atIndex;
                machine.getInstructions().set(i, new NOPInstruction(jmp.getAdjustment()));
            } else {
                // Reset
                machine.getInstructions().set(i, atIndex);
                continue;
            }

            if (machine.execute()) {       
                break;
            }

            // Reset
            machine.getInstructions().set(i, atIndex);

        }
        System.out.println(machine.getAccumulatorValue());
    }
}
